<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>因未完全卸载导致的npm error EEXIST</title>
      <link href="/2020/04/18/%E5%9B%A0%E6%9C%AA%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%AF%BC%E8%87%B4%E7%9A%84npm-error-EEXIST/"/>
      <url>/2020/04/18/%E5%9B%A0%E6%9C%AA%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%AF%BC%E8%87%B4%E7%9A%84npm-error-EEXIST/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>在安装PicGo-Core的时候，因为一直安装不了插件，于是导致我经常安装卸载PicGo-Core。</p><p>在某次安装的时候突然失败，上网查了一下原因，说是拒绝安装。</p><p>思考了一下，觉得有两种原因：</p><p>第一种，没有管理员权限</p><p>第二种，后台程序占用文件</p><p>然而解决这两个因素后，PicGo仍然安装不了，仔细观察错误信息后发现，npm叫我删除某个文件然后再重试。</p><p><a href="https://i.loli.net/2020/04/18/2DSCIWzQMeFfRnm.png" data-fancybox="group" data-caption="image-20200418194514442" class="fancybox"><img alt="image-20200418194514442" title="image-20200418194514442" data-src="https://i.loli.net/2020/04/18/2DSCIWzQMeFfRnm.png" class="lazyload"></a></p><p>我在npm的安装文件夹找了一下，找到了未完全卸载的picgo文件，删除后就可以正常安装了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> npm </tag>
            
            <tag> Error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora + picgo + SM.MS 实现图片自动上传</title>
      <link href="/2020/04/18/typora-picgo-SM-MS-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/"/>
      <url>/2020/04/18/typora-picgo-SM-MS-%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Introduction——前言"><a href="#Introduction——前言" class="headerlink" title="Introduction——前言"></a>Introduction——前言</h1><p>typora写作是很舒服，但是到了图片上传我简直太难了。上一篇博客我说我图床用的是imgchr，现在我屈服了，玩博客用imgchr简直是魔鬼好吧，图片上传完了，居然是乱序上传，导致我很难改图片地址。又因为imgchr每小时30张（根据服务器负载情况调整，大部分图床都有限制），而我图片都是一次全传完，所以就免不了被限制。</p><p>所以后来我就找了个法子——typora + picgo，自动上传图片，这样就可以避免图片都是同一时间传，本来我是想自己开发picgo + imgchr 的插件的，研究了半天，放心imgchr没有api，这就很尴尬了，所以最后只能选择SM.MS作为博客的主要图床了。</p><h1 id="Preparation——前期准备"><a href="#Preparation——前期准备" class="headerlink" title="Preparation——前期准备"></a>Preparation——前期准备</h1><h2 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h2><p>这个就不用多说了吧，Markdown写作神器。百度搜索，全是英文的就是了，或者直接进入<a href="https://www.typora.io/" target="_blank" rel="noopener">typora官网</a>下载。</p><p><a href="https://i.loli.net/2020/04/18/m7AMFbh6S3jgGEo.png" data-fancybox="group" data-caption="image-20200418125209627" class="fancybox"><img alt="image-20200418125209627" title="image-20200418125209627" data-src="https://i.loli.net/2020/04/18/m7AMFbh6S3jgGEo.png" class="lazyload"></a></p><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>picgo有两个版本，一个是CLI版本一个是GUI版本的(CLI版本即PicGo-Core，GUI版本即PicGo.app)。而我使用的是CLI版本的，也就是命令行版本的。</p><p>注意：根据<a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/getting-started.html" target="_blank" rel="noopener">文档</a>的描述，要求Node.js 版本 >= 8。</p><blockquote><h4 id="PicGo-app和PicGo-Core之间的区别（命令行）"><a href="#PicGo-app和PicGo-Core之间的区别（命令行）" class="headerlink" title="PicGo.app和PicGo-Core之间的区别（命令行）"></a>PicGo.app和PicGo-Core之间的区别（命令行）</h4><ul><li>目前，PicGo（应用程序）仅中文。</li><li>PicGo.app提供了一个GUI，因此与CLI版本相比更易于设置。</li><li>使用PicGo-Core（命令行）进行上传会消耗较少的计算资源，因为该过程仅在上传过程中运行，并且在上传成功或失败后将退出。通过PicGo.app上传时，PicGo.app将始终保持运行状态，不会自动退出。此外，PicGo.app是电子应用程序，它消耗了更多的计算资源。</li><li>PicGo.app和PicGo-Core使用不同的配置文件，但是您可以将<code>picBed</code>PicGo.app的配置文件中key 下的json对象复制到PicGo的配置文件中。</li><li>PicGo.app提供其他功能，例如上传历史记录，自动重命名等。</li></ul><p>——<a href="https://support.typora.io/Upload-Image/#picgoapp-chinese-language-only" target="_blank" rel="noopener">typora官网文档</a></p></blockquote><p>Node.js就不用我多说了吧，我<a href="https://selfconfusion.github.io/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/#node-js" target="_blank" rel="noopener">上一篇博客</a>就有详细的说怎么下载了，这里就不多说了。</p><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p>picgo-core以下简称picgo。</p><h3 id="安装与检验"><a href="#安装与检验" class="headerlink" title="安装与检验"></a>安装与检验</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在任意目录打开<strong>Git Bash</strong>或者cmd等等，输入命令安装。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn global add picgo</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">npm install picgo -g</span><br></pre></td></tr></tbody></table></figure></div><p>觉得安装慢的，我<a href="https://selfconfusion.github.io/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/#%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95%E4%BA%8C" target="_blank" rel="noopener">上一篇博客</a>也有讲到，切换淘宝源即可。</p><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">picgo -h</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">picgo -v</span><br></pre></td></tr></tbody></table></figure></div><p>输出如图所示即为安装成功。</p><p><a href="https://i.loli.net/2020/04/18/rTv8hnxzUINLuOi.png" data-fancybox="group" data-caption="image-20200418164044189" class="fancybox"><img alt="image-20200418164044189" title="image-20200418164044189" data-src="https://i.loli.net/2020/04/18/rTv8hnxzUINLuOi.png" class="lazyload"></a></p><p><a href="https://i.loli.net/2020/04/18/hjORA4oIqLQk7b1.png" data-fancybox="group" data-caption="image-20200418164226144" class="fancybox"><img alt="image-20200418164226144" title="image-20200418164226144" data-src="https://i.loli.net/2020/04/18/hjORA4oIqLQk7b1.png" class="lazyload"></a></p><h2 id="SM-MS"><a href="#SM-MS" class="headerlink" title="SM.MS"></a>SM.MS</h2><blockquote><p>PicGo 本体支持如下图床：</p><ul><li><del><code>微博图床</code> v1.0</del> <strong>微博图床从 2019 年 4 月开始进行防盗链，不建议继续使用</strong></li><li><code>七牛图床</code> v1.0</li><li><code>腾讯云 COS v4\v5版本</code> v1.1 & v1.5.0</li><li><code>又拍云</code> v1.2.0</li><li><code>GitHub</code> v1.5.0</li><li><del><code>SM.MS</code> v1.5.1</del> <strong>由于官方不再支持V1版本，暂时请使用<a href="https://github.com/xlzy520/picgo-plugin-smms-user" target="_blank" rel="noopener">smms-user</a>插件</strong></li><li><code>阿里云 OSS</code> v1.6.0</li><li><code>Imgur</code> v1.6.0</li></ul><p><strong>本体不再增加默认的图床支持。你可以自行开发第三方图床插件。详见 <a href="https://picgo.github.io/PicGo-Core-Doc/" target="_blank" rel="noopener">PicGo-Core</a></strong>。</p><p>——<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p></blockquote><blockquote><p>为 <a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a> 开发的一款插件，新增了<a href="https://sm.ms/home/" target="_blank" rel="noopener">SM.MS注册用户</a> 图床。 使用SM.MS V2的API上传，适用于注册了SM.MS的用户。填写<code>Authorization</code>即可</p><p>——<a href="https://github.com/xlzy520/picgo-plugin-smms-user" target="_blank" rel="noopener">smms-user</a>作者</p></blockquote><p>所以我们需要一个SM.MS的密钥。</p><p>可以百度搜索，或直接进入<a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS的官网</a>，注册一个账号。</p><p><a href="https://i.loli.net/2020/04/18/ET2gejhHUJzu6kl.png" data-fancybox="group" data-caption="image-20200418165443463" class="fancybox"><img alt="image-20200418165443463" title="image-20200418165443463" data-src="https://i.loli.net/2020/04/18/ET2gejhHUJzu6kl.png" class="lazyload"></a></p><p>登录后，进入个人的设置页面。</p><p><a href="https://i.loli.net/2020/04/18/z9b7JSdZjWeM3HR.png" data-fancybox="group" data-caption="image-20200418165741937" class="fancybox"><img alt="image-20200418165741937" title="image-20200418165741937" data-src="https://i.loli.net/2020/04/18/z9b7JSdZjWeM3HR.png" class="lazyload"></a></p><p>进入<strong>API Token</strong>页面，生成密钥，新注册的是没有密钥的。生成完后就会出现在<strong>Secret Token</strong>里面。</p><p><a href="https://i.loli.net/2020/04/18/7UoPuywJFq5Ng2Q.png" data-fancybox="group" data-caption="image-20200418170025923" class="fancybox"><img alt="image-20200418170025923" title="image-20200418170025923" data-src="https://i.loli.net/2020/04/18/7UoPuywJFq5Ng2Q.png" class="lazyload"></a></p><h1 id="Setting——配置"><a href="#Setting——配置" class="headerlink" title="Setting——配置"></a>Setting——配置</h1><h2 id="Picgo-1"><a href="#Picgo-1" class="headerlink" title="Picgo"></a>Picgo</h2><p>根据<a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/commands.html#install-add" target="_blank" rel="noopener">PicGo文档</a>的描述，我们得用<code>picgo install [name]</code>来安装插件，其中<strong>[name]</strong>代表的是插件名</p><p>注意：picgo的插件普遍以<strong>picgo-plugin-[name]</strong>来命名，但安装插件时<strong>[name]</strong>不是<strong>picgo-plugin-[name]</strong>，它不需要前面的那一部分。</p><p>上面也说了，本体自带的smms不能用了，想要用SM.MS图床就得安装<a href="https://github.com/xlzy520/picgo-plugin-smms-user" target="_blank" rel="noopener">smms-user</a>插件。</p><p>安装smms-user插件，只需执行<code>picgo install smms-user</code>安装即可。</p><p><a href="https://i.loli.net/2020/04/18/XGcSL6QiRNZrAao.png" data-fancybox="group" data-caption="image-20200418170923341.png" class="fancybox"><img alt="image-20200418170923341.png" title="image-20200418170923341.png" data-src="https://i.loli.net/2020/04/18/XGcSL6QiRNZrAao.png" class="lazyload"></a></p><p>这是我掉过最大的坑了，我本以为文档是特意提醒我，却发现这句话根本没有意义。</p><p>在个人用户的文件夹进入<strong>.picgo</strong>文件夹，打开<strong>config.json</strong>进行配置。</p><p><a href="https://i.loli.net/2020/04/18/ElURB8yO2efmGFw.png" data-fancybox="group" data-caption="image-20200418171729868" class="fancybox"><img alt="image-20200418171729868" title="image-20200418171729868" data-src="https://i.loli.net/2020/04/18/ElURB8yO2efmGFw.png" class="lazyload"></a></p><p>修改如下，注意将<strong>Authorization</strong>的参数换为SM.MS的密钥，即将<strong>Secret Token</strong>替换为密钥。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  "picBed": {</span><br><span class="line">    "current": "smms-user",</span><br><span class="line">    "uploader": "smms-user",</span><br><span class="line">    "transformer": "path",</span><br><span class="line">    "smms-user": {</span><br><span class="line">      "Authorization": "Secret Token"</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  "picgoPlugins": {</span><br><span class="line">    "picgo-plugin-smms-user": true</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>打开typora，进入偏好设置。</p><p><a href="https://i.loli.net/2020/04/18/4qnxcg169roEPNd.png" data-fancybox="group" data-caption="image-20200418172143297" class="fancybox"><img alt="image-20200418172143297" title="image-20200418172143297" data-src="https://i.loli.net/2020/04/18/4qnxcg169roEPNd.png" class="lazyload"></a></p><p>进入图像选项，将<strong>插入图片时…</strong>更改为<strong>上传图片</strong>，勾选<strong>对本地位置的图片应用上述规则</strong>、<strong>插入时自动转义图片URL</strong>。至于第二项我不推荐勾选，因为当你写博客时，想将上传好的图片更换位置，一复制一粘贴，它又给你上传了一遍…当然，如果你想用我也不会阻拦。</p><blockquote><p>If you have “node” and “picgo” installed in system PATH directly, you could also fill “picgo upload” as the custom command directly.</p><p>——<a href="https://support.typora.io/Upload-Image/#picgo-location" target="_blank" rel="noopener">typora官方文档</a></p></blockquote><p>根据官方文档的描述：因为我不是使用typora内置下载的picgo CLI版，所以我们得自定义命令。我们需要将<strong>上传服务</strong>改为<strong>Custom Command</strong>，然后在<strong>自定义命令</strong>里输入<code>picgo upload</code></p><p><a href="https://i.loli.net/2020/04/18/h3mDXw9sJZaUF1x.png" data-fancybox="group" data-caption="image-20200418172228204" class="fancybox"><img alt="image-20200418172228204" title="image-20200418172228204" data-src="https://i.loli.net/2020/04/18/h3mDXw9sJZaUF1x.png" class="lazyload"></a></p><p>至此所有的配置都完成了，之后就可以愉快的使用了。</p><h1 id="Usage——使用"><a href="#Usage——使用" class="headerlink" title="Usage——使用"></a>Usage——使用</h1><p><a href="https://support.typora.io/Upload-Image/#usage" target="_blank" rel="noopener">官方文档</a>其实是有说明如何使用的，不过我还是演示一下吧。</p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>截图粘贴需要手动上传，当然啦这可能是为了避免我之前说描述的情况吧。</p><p><a href="https://i.loli.net/2020/04/18/aWQqTRYZO4r7kGy.gif" data-fancybox="group" data-caption="截图" class="fancybox"><img alt="截图" title="截图" data-src="https://i.loli.net/2020/04/18/aWQqTRYZO4r7kGy.gif" class="lazyload"></a></p><h2 id="拖拽"><a href="#拖拽" class="headerlink" title="拖拽"></a>拖拽</h2><p>拖拽就不用手动上传了，他会自动上传</p><p><a href="https://i.loli.net/2020/04/18/CLOUMVmJw3yrT9Q.gif" data-fancybox="group" data-caption="拖拽" class="fancybox"><img alt="拖拽" title="拖拽" data-src="https://i.loli.net/2020/04/18/CLOUMVmJw3yrT9Q.gif" class="lazyload"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Typora </tag>
            
            <tag> PicGo </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github + hexo博客搭建教程</title>
      <link href="/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2020/04/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Introduction——前言"><a href="#Introduction——前言" class="headerlink" title="Introduction——前言"></a>Introduction——前言</h1><p>托更了很久，我一点不好意思都没有[手动滑稽]，我想应该没有人等着我的教程的吧。之所以这时才做这教程，是因为我准备开启新项目了，如果还不填坑的话，坑就越来越多，然后就不想填了。为了避免这种情况，所以我决定先填了这坑，再开新坑。</p><p>本篇文章将会一步步教你如何用github和hexo搭建属于自己的博客，以及搭建过程中的一些注意事项，也会教你如何解决搭建过程中出现的问题，我不仅仅会提供一种解决问题的方法，还会提供一种解决问题的思想。</p><p>因为我早就搭建好博客了，所以为了模拟搭建过程和搭建过程所遇到的问题，我选择虚拟机来模拟这一效果。或许我可以不那么麻烦，但是我的记忆力实际上是不怎么好的，更何况现在距离我搭建完博客已经很久了，有些细节我都忘了，而这些细节又很重要。所以为了最好的效果，我就决定麻烦一些，既方便我以后的复习，也方便大家。</p><h1 id="Preparation——准备工作"><a href="#Preparation——准备工作" class="headerlink" title="Preparation——准备工作"></a>Preparation——准备工作</h1><p>在这里，我将告诉你用github pages + hexo的方式搭建博客所需的一些前置要求。当然啦，平台是windows，linux以后再说吧。</p><h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p>github 就不用多说了吧，想要用github pages 那就就免不了一个github的账号，当然有了就不用注册了，可以直接跳过。</p><p>github是全英文的，我怕有的人看到英文就头疼，所以我就给一个注册的步骤吧。如果用谷歌浏览器的，直接用谷歌翻译后问题就不大了。下面我就教一些不用谷歌浏览器的人github的注册方法。</p><h3 id="打开github"><a href="#打开github" class="headerlink" title="打开github"></a>打开github</h3><p>在网页的地址栏输入github的官网<a href="https://nodejs.org/" target="_blank" rel="noopener">github.com</a>，然后回车。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB4xB9.png" data-fancybox="group" data-caption="image-20200402085726969" class="fancybox"><img alt="image-20200402085726969" title="image-20200402085726969" data-src="https://s1.ax1x.com/2020/04/05/GB4xB9.png" class="lazyload"></a></p><h3 id="打开注册页面"><a href="#打开注册页面" class="headerlink" title="打开注册页面"></a>打开注册页面</h3><p>在github的官网上头点击Sign up打开注册页面。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB4vnJ.png" data-fancybox="group" data-caption="image-20200402085936944" class="fancybox"><img alt="image-20200402085936944" title="image-20200402085936944" data-src="https://s1.ax1x.com/2020/04/05/GB4vnJ.png" class="lazyload"></a></p><h3 id="输入信息并注册"><a href="#输入信息并注册" class="headerlink" title="输入信息并注册"></a>输入信息并注册</h3><p><a href="https://s1.ax1x.com/2020/04/05/GB4z7R.png" data-fancybox="group" data-caption="image-20200402090437077" class="fancybox"><img alt="image-20200402090437077" title="image-20200402090437077" data-src="https://s1.ax1x.com/2020/04/05/GB4z7R.png" class="lazyload"></a></p><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>Hexo是基于Node.js开发的，所以要安装hexo，Node.js必不可少</p><h3 id="打开官网"><a href="#打开官网" class="headerlink" title="打开官网"></a>打开官网</h3><p>老司机可以直接跳过了。</p><p>可以百度搜索Node.js，或者直接打开<a href="https://nodejs.org/" target="_blank" rel="noopener">nodejs.org</a></p><p><a href="https://s1.ax1x.com/2020/04/05/GB5pA1.png" data-fancybox="group" data-caption="image-20200402110304018" class="fancybox"><img alt="image-20200402110304018" title="image-20200402110304018" data-src="https://s1.ax1x.com/2020/04/05/GB5pA1.png" class="lazyload"></a></p><p>在右上角找到一个像谷歌翻译的图标，点击后，找到 <strong>中文(简体)</strong>并点击，即可更换语言。百度搜索到的一般是已经调好语言了的，所以不在需要更换语言，可以直接跳到下一步。如果对英文不敏感的话，也可直接省略。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB4L1U.png" data-fancybox="group" data-caption="image-20200402110517314" class="fancybox"><img alt="image-20200402110517314" title="image-20200402110517314" data-src="https://s1.ax1x.com/2020/04/05/GB4L1U.png" class="lazyload"></a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>Node.js官网提供两个版本，一个最新版(即当前发布版)，和一个稳定版(即长期支持版)。个人建议下载稳定版，当然你想要最新版也没问题。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB4XX4.png" data-fancybox="group" data-caption="image-20200402110613364" class="fancybox"><img alt="image-20200402110613364" title="image-20200402110613364" data-src="https://s1.ax1x.com/2020/04/05/GB4XX4.png" class="lazyload"></a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装没什么好说的，双击运行后，一路默认安装即可。完成后如图所示。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB59tx.png" data-fancybox="group" data-caption="image-20200402123721805" class="fancybox"><img alt="image-20200402123721805" title="image-20200402123721805" data-src="https://s1.ax1x.com/2020/04/05/GB59tx.png" class="lazyload"></a></p><h3 id="检验安装"><a href="#检验安装" class="headerlink" title="检验安装"></a>检验安装</h3><p>安装后，就免不了检验是否安装成功。打开命令行，即<kbd>win</kbd>+<kbd>r</kbd>，输入 <strong>cmd</strong>，回车。即可打开命令行。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5Ch6.png" data-fancybox="group" data-caption="image-20200402124358910" class="fancybox"><img alt="image-20200402124358910" title="image-20200402124358910" data-src="https://s1.ax1x.com/2020/04/05/GB5Ch6.png" class="lazyload"></a></p><p>然后在命令行中输入<code>node -v</code>，回车后，输出结果为版本号，说明node.js安装成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5F1O.png" data-fancybox="group" data-caption="image-20200402124927659" class="fancybox"><img alt="image-20200402124927659" title="image-20200402124927659" data-src="https://s1.ax1x.com/2020/04/05/GB5F1O.png" class="lazyload"></a></p><p>在命令行中输入<code>npm -v</code>，回车后，输出结果为版本号，说明npm安装成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5i9K.png" data-fancybox="group" data-caption="image-20200402124650369" class="fancybox"><img alt="image-20200402124650369" title="image-20200402124650369" data-src="https://s1.ax1x.com/2020/04/05/GB5i9K.png" class="lazyload"></a></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>git是一个好东西，他有挺多用处，但我都不懂用。如果想了解更多，请去<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000" target="_blank" rel="noopener">廖雪峰老师的官方网站</a>。不要害怕不精通就不会用，虽然我们不精通也不了解，但这并不妨碍我们使用它。</p><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p>首先打开Git的官方网站，同理你可以百度搜索，也可以直接打开<a href="https://git-scm.com/" target="_blank" rel="noopener">git-scm.com</a>进入官网。看到绿色的小电脑没有？点击下方的download即可下载。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5kcD.png" data-fancybox="group" data-caption="image-20200402233516396" class="fancybox"><img alt="image-20200402233516396" title="image-20200402233516396" data-src="https://s1.ax1x.com/2020/04/05/GB5kcD.png" class="lazyload"></a></p><p>当然啦，因为是外国网站，下载速度是非常慢的，下面提供一个办法，打开<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">阿里源的镜像站</a>（注意我提供的网址仅限windows平台的Git），下滑找到最新版本，并点击。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5Aje.png" data-fancybox="group" data-caption="image-20200402234531375" class="fancybox"><img alt="image-20200402234531375" title="image-20200402234531375" data-src="https://s1.ax1x.com/2020/04/05/GB5Aje.png" class="lazyload"></a></p><p>找到自己的操作系统类型，是32位还是64位。选择好后，点击下载。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5VnH.png" data-fancybox="group" data-caption="image-20200402234750009" class="fancybox"><img alt="image-20200402234750009" title="image-20200402234750009" data-src="https://s1.ax1x.com/2020/04/05/GB5VnH.png" class="lazyload"></a></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>安装也是跟node.js一样，全部默认，毕竟看不懂英文嘛[手动滑稽]。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5ZBd.png" data-fancybox="group" data-caption="image-20200402234916958" class="fancybox"><img alt="image-20200402234916958" title="image-20200402234916958" data-src="https://s1.ax1x.com/2020/04/05/GB5ZBd.png" class="lazyload"></a></p><h3 id="检验安装-1"><a href="#检验安装-1" class="headerlink" title="检验安装"></a>检验安装</h3><p>安装完后，自然也免不了检验，老司机就跳过吧。</p><p>同样打开命令行，即<kbd>win</kbd>+<kbd>r</kbd>，输入 <strong>cmd</strong>，回车。在命令行中输入<code>git --version</code>，回车。看到输出版本号即为安装成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5eHA.png" data-fancybox="group" data-caption="image-20200402235322795" class="fancybox"><img alt="image-20200402235322795" title="image-20200402235322795" data-src="https://s1.ax1x.com/2020/04/05/GB5eHA.png" class="lazyload"></a></p><p>或者直接在桌面右键看到Git GUI Here和Git Bash Here即为安装成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5nAI.png" data-fancybox="group" data-caption="image-20200402235922437" class="fancybox"><img alt="image-20200402235922437" title="image-20200402235922437" data-src="https://s1.ax1x.com/2020/04/05/GB5nAI.png" class="lazyload"></a></p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo在我看来就是一个将Markdown按照模版转换为网页的工具。</p><blockquote><p>什么是 Hexo？</p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>——hexo官方文档</p></blockquote><p>注意我提供的Hexo安装方法有两个，第一个是官方的安装方法，但是众所周知，因为国内的原因，所以下载速度十分缓慢，我并不推荐，所以我提供了第二个方法，利用阿里源的镜像，加快下载速度。当然这两种方法我都会在虚拟机上模拟，尽可能地排除问题。</p><h3 id="必要准备"><a href="#必要准备" class="headerlink" title="必要准备"></a>必要准备</h3><p>首先你需要找个位置新建一个文件夹，这个文件夹就是以后博客所在的文件夹。那里有hexo、hexo的主题、博客的文章等等文件，可以说那个文件夹就是本地博客与github pages的桥梁，所以必须找好地方。</p><p>比如我，就直接反正D盘，命名为<strong>Blog</strong>。而在虚拟机中，因为我只是模拟效果，所以很随意地反在桌面。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5uNt.png" data-fancybox="group" data-caption="image-20200403132950493" class="fancybox"><img alt="image-20200403132950493" title="image-20200403132950493" data-src="https://s1.ax1x.com/2020/04/05/GB5uNt.png" class="lazyload"></a></p><h3 id="安装方法一"><a href="#安装方法一" class="headerlink" title="安装方法一"></a>安装方法一</h3><p>现在我们已经创建好了文件夹，进入文件夹后，右键打开<strong>Git Bash Here</strong></p><p><a href="https://s1.ax1x.com/2020/04/05/GB5K4P.png" data-fancybox="group" data-caption="image-20200403134305808" class="fancybox"><img alt="image-20200403134305808" title="image-20200403134305808" data-src="https://s1.ax1x.com/2020/04/05/GB5K4P.png" class="lazyload"></a></p><p>在打开的命令行中输入<code>npm install hexo-cli -g</code>，回车。之后它就会自动下载文件，等待它命令运行完成即可。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5Q9f.png" data-fancybox="group" data-caption="image-20200403135206305" class="fancybox"><img alt="image-20200403135206305" title="image-20200403135206305" data-src="https://s1.ax1x.com/2020/04/05/GB5Q9f.png" class="lazyload"></a></p><p>运行完成后，显示如图所示，仅供参考。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5l38.png" data-fancybox="group" data-caption="image-20200403135405494" class="fancybox"><img alt="image-20200403135405494" title="image-20200403135405494" data-src="https://s1.ax1x.com/2020/04/05/GB5l38.png" class="lazyload"></a></p><p>然后输入<code>hexo init</code>，回车后继续等待。结果仅供参考。</p><p>注意：不要中途退出或者<kbd>ctrl</kbd>+<kbd>c</kbd>停止运行命令，不然会出现一定的错误，这时候将文件夹里的文件清空，再重新运行命令。如果中途下载没有速度或者没有进展，也可用此方法，可能会有一定的效果。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB51gS.png" data-fancybox="group" data-caption="image-20200403140759726" class="fancybox"><img alt="image-20200403140759726" title="image-20200403140759726" data-src="https://s1.ax1x.com/2020/04/05/GB51gS.png" class="lazyload"></a></p><p>接下来检查一下目录，如图所示，会有以下文件和文件夹。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5GuQ.png" data-fancybox="group" data-caption="image-20200403141101187" class="fancybox"><img alt="image-20200403141101187" title="image-20200403141101187" data-src="https://s1.ax1x.com/2020/04/05/GB5GuQ.png" class="lazyload"></a></p><p>检查完后，在命令行中运行<code>npm install</code>。结果如图所示。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5JBj.png" data-fancybox="group" data-caption="image-20200403141341232" class="fancybox"><img alt="image-20200403141341232" title="image-20200403141341232" data-src="https://s1.ax1x.com/2020/04/05/GB5JBj.png" class="lazyload"></a></p><p>之后运行<code>hexo s</code>，复制提供的本地博客链接，在浏览器中打开。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5NEn.png" data-fancybox="group" data-caption="image-20200403141740640" class="fancybox"><img alt="image-20200403141740640" title="image-20200403141740640" data-src="https://s1.ax1x.com/2020/04/05/GB5NEn.png" class="lazyload"></a></p><p>如图所示，即为安装成功。在命令行中按<kbd>ctrl</kbd>+<kbd>c</kbd>停止运行命令。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5YHs.png" data-fancybox="group" data-caption="image-20200403141608529" class="fancybox"><img alt="image-20200403141608529" title="image-20200403141608529" data-src="https://s1.ax1x.com/2020/04/05/GB5YHs.png" class="lazyload"></a></p><h3 id="安装方法二"><a href="#安装方法二" class="headerlink" title="安装方法二"></a>安装方法二</h3><p>进入文件夹，右键打开<strong>Git Bash Here</strong></p><p><a href="https://s1.ax1x.com/2020/04/05/GB5K4P.png" data-fancybox="group" data-caption="image-20200403134305808" class="fancybox"><img alt="image-20200403134305808" title="image-20200403134305808" data-src="https://s1.ax1x.com/2020/04/05/GB5K4P.png" class="lazyload"></a></p><p>在打开的命令行中运行<code>npm config set registry https://registry.npm.taobao.org</code>，切换到淘宝源。</p><p>注意：<code>npm config set registry http://www.npmjs.org</code>切换官方源。</p><p>切换完后可用<code>npm info underscore</code>检测是否已经换到淘宝源，看到有淘宝地址，即切换成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB503T.png" data-fancybox="group" data-caption="image-20200405100802583" class="fancybox"><img alt="image-20200405100802583" title="image-20200405100802583" data-src="https://s1.ax1x.com/2020/04/05/GB503T.png" class="lazyload"></a></p><p>之后就跟方法一同样了。下面我就不重复了，就放一些效果图吧。</p><p><a href="https://s1.ax1x.com/2020/04/05/GB5BgU.png" data-fancybox="group" data-caption="image-20200405101044573" class="fancybox"><img alt="image-20200405101044573" title="image-20200405101044573" data-src="https://s1.ax1x.com/2020/04/05/GB5BgU.png" class="lazyload"></a></p><p><a href="https://s1.ax1x.com/2020/04/05/GDC3xe.png" data-fancybox="group" data-caption="image-20200405101224453" class="fancybox"><img alt="image-20200405101224453" title="image-20200405101224453" data-src="https://s1.ax1x.com/2020/04/05/GDC3xe.png" class="lazyload"></a></p><p><a href="https://s1.ax1x.com/2020/04/05/GDC12D.png" data-fancybox="group" data-caption="image-20200405101333364" class="fancybox"><img alt="image-20200405101333364" title="image-20200405101333364" data-src="https://s1.ax1x.com/2020/04/05/GDC12D.png" class="lazyload"></a></p><h1 id="Github-And-Hexo-Setting——Github和Hexo的设置"><a href="#Github-And-Hexo-Setting——Github和Hexo的设置" class="headerlink" title="Github And Hexo Setting——Github和Hexo的设置"></a>Github And Hexo Setting——Github和Hexo的设置</h1><p>做了这么久的前期准备，下面终于到正片了。现在我也算是为什么很多教程都没有这么详细的缘故了，真是废时间啊。</p><p>其实配置ssh key和创建github pages顺序是了调换的，但配置_config.yml必须放在这两个之后，看了就懂了。</p><h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><p>ssh key在某种程度上就是一个登录github的密钥，但它实际上并不是，它实际上是github验证用户身份的身份证。有了ssh key，git才能上传文件到用户的仓库，没有ssh key也可以布置博客，只不过会非常麻烦，全部都要手动上传。</p><h3 id="检查ssh-key"><a href="#检查ssh-key" class="headerlink" title="检查ssh key"></a>检查ssh key</h3><p>在命令行中输入<code>cd ~/.ssh</code>，即可检查是否创建过ssh key，如果没有则会提示找不到文件，如图所示。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCGKH.png" data-fancybox="group" data-caption="image-20200405105940957" class="fancybox"><img alt="image-20200405105940957" title="image-20200405105940957" data-src="https://s1.ax1x.com/2020/04/05/GDCGKH.png" class="lazyload"></a></p><p>如果创建过ssh key，则任何提升都没有，但工作目录会移动到ssh，所以要注意，不要没切回去就乱输命令。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCJrd.png" data-fancybox="group" data-caption="image-20200405110338166" class="fancybox"><img alt="image-20200405110338166" title="image-20200405110338166" data-src="https://s1.ax1x.com/2020/04/05/GDCJrd.png" class="lazyload"></a></p><p>如果已经创建，可以通过<code>cat ~/.ssh/id_rsa.pub</code>查看ssh key。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCwPf.png" data-fancybox="group" data-caption="image-20200405112549729" class="fancybox"><img alt="image-20200405112549729" title="image-20200405112549729" data-src="https://s1.ax1x.com/2020/04/05/GDCwPf.png" class="lazyload"></a></p><h3 id="创建ssh-key"><a href="#创建ssh-key" class="headerlink" title="创建ssh key"></a>创建ssh key</h3><p>如果没有创建过ssh key则首先需要全局配置git的本地用户。理论上本地用户可以随意配置，但是我建议输入的是github的信息，不然以后容易遗忘。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "用户名"</span><br><span class="line">git config --global user.email "邮箱地址"</span><br></pre></td></tr></tbody></table></figure></div><p>配置完成后执行下面的命令生成ssh key，中途需要输入三次回车。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C '上面的邮箱'</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://s1.ax1x.com/2020/04/05/GDCNVI.png" data-fancybox="group" data-caption="image-20200405112046721" class="fancybox"><img alt="image-20200405112046721" title="image-20200405112046721" data-src="https://s1.ax1x.com/2020/04/05/GDCNVI.png" class="lazyload"></a></p><p>创建完后通过<code>cat ~/.ssh/id_rsa.pub</code>查看ssh key。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCwPf.png" data-fancybox="group" data-caption="image-20200405112549729" class="fancybox"><img alt="image-20200405112549729" title="image-20200405112549729" data-src="https://s1.ax1x.com/2020/04/05/GDCwPf.png" class="lazyload"></a></p><h3 id="添加信任"><a href="#添加信任" class="headerlink" title="添加信任"></a>添加信任</h3><p>打开github的账号设置</p><p><a href="https://s1.ax1x.com/2020/04/05/GDC0G8.png" data-fancybox="group" data-caption="image-20200405112751088" class="fancybox"><img alt="image-20200405112751088" title="image-20200405112751088" data-src="https://s1.ax1x.com/2020/04/05/GDC0G8.png" class="lazyload"></a></p><p>新建ssh key</p><p><a href="https://s1.ax1x.com/2020/04/05/GDEiP1.png" data-fancybox="group" data-caption="image-20200405112841121" class="fancybox"><img alt="image-20200405112841121" title="image-20200405112841121" data-src="https://s1.ax1x.com/2020/04/05/GDEiP1.png" class="lazyload"></a></p><p>输入必要的信息，选择添加ssh key即可。注意输入的ssh key包括*<em>ssh-rsa *</em>这一部分。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCBRS.png" data-fancybox="group" data-caption="image-20200405112959044" class="fancybox"><img alt="image-20200405112959044" title="image-20200405112959044" data-src="https://s1.ax1x.com/2020/04/05/GDCBRS.png" class="lazyload"></a></p><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><p>想知道是否成功配置ssh key，在git bash中输入<code>ssh -T git@github.com</code>（注意大小写）。出现“You’ve successfully authenticated, but GitHub does not provide shell access.”则说明添加成功。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCyrj.png" data-fancybox="group" data-caption="image-20200405113840843" class="fancybox"><img alt="image-20200405113840843" title="image-20200405113840843" data-src="https://s1.ax1x.com/2020/04/05/GDCyrj.png" class="lazyload"></a></p><h2 id="创建Github-pages"><a href="#创建Github-pages" class="headerlink" title="创建Github pages"></a>创建Github pages</h2><p>首先登陆github，在右上角点击加号旁的倒三角，选择New repository。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCl8O.png" data-fancybox="group" data-caption="image-20200405102331832" class="fancybox"><img alt="image-20200405102331832" title="image-20200405102331832" data-src="https://s1.ax1x.com/2020/04/05/GDCl8O.png" class="lazyload"></a></p><p>填好仓库的信息（公共仓库与私人仓库随意选择），然后创建，创建完后自动开启github pages。</p><p>注意：仓库名只能和用户名相同并且要加上<strong>.github.io</strong>，比如我的用户名为<strong>Selcon123</strong>，我的仓库名只能为<strong>Selcon123.github.io</strong>，这是因为github只给用户一个与用户名相同的仓库开启github pages。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDPGWT.png" data-fancybox="group" data-caption="image-20200405102843884" class="fancybox"><img alt="image-20200405102843884" title="image-20200405102843884" data-src="https://s1.ax1x.com/2020/04/05/GDPGWT.png" class="lazyload"></a></p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>在博客的文件夹中打开_config.yml，在最下面找到deploy，并进行修改，如图所示。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDCDxg.png" data-fancybox="group" data-caption="image-20200405115140534" class="fancybox"><img alt="image-20200405115140534" title="image-20200405115140534" data-src="https://s1.ax1x.com/2020/04/05/GDCDxg.png" class="lazyload"></a></p><p>特别注意：输完仓库名后还要加上<strong>.git</strong>，举个例子，假如我的用户名为<strong>Selcon123</strong>，我需修改为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Selcon123/Selcon123.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure></div><h1 id="Deploy-Website——部署网站"><a href="#Deploy-Website——部署网站" class="headerlink" title="Deploy Website——部署网站"></a>Deploy Website——部署网站</h1><p>在这里我打算介绍一些指令，但从这里开始我就不模拟了，因为我的博客已经搭好了，如果模拟的话可能会出现一些问题。</p><p>hexo官网提供挺多方法部署网站，但我只讲一种，如果想用其他的方法，可以执行研究。</p><h3 id="使用git部署"><a href="#使用git部署" class="headerlink" title="使用git部署"></a>使用git部署</h3><p>首先先在git bash中，运行<code>npm install hexo-deployer-git --save</code>安装插件。如果在之前安装hexo时用方法二切换了阿里源，安装应该挺快。</p><p><a href="https://s1.ax1x.com/2020/04/05/GDC6qs.png" data-fancybox="group" data-caption="image-20200405121031306" class="fancybox"><img alt="image-20200405121031306" title="image-20200405121031306" data-src="https://s1.ax1x.com/2020/04/05/GDC6qs.png" class="lazyload"></a></p><p>安装之后就可以用git部署了，也就是可以在博客文件夹中打开git bash，运行命令部署。以下即常用命令合集。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean#清空缓存（有时候出问题时用到）</span><br><span class="line">hexo g#生成页面（缓存）</span><br><span class="line">hexo d#部署</span><br><span class="line">hexo g -d#生成并部署</span><br><span class="line">hexo s#本地预览（要先生成）</span><br></pre></td></tr></tbody></table></figure></div><p>下面是hexo自带的常用命令</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new "文章名"#新建文章（博客）</span><br><span class="line">hexo new page "页面名"#新建页面（常用于个性化）</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Writing——正式写作"><a href="#Writing——正式写作" class="headerlink" title="Writing——正式写作"></a>Writing——正式写作</h1><p>下面我就介绍一整套写作流程流程。</p><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>首先在git bash中执行<code>hexo new “My first blog”</code>新建一篇名为<strong>My first blog</strong>的文章。在<strong>./source/_posts</strong>中找到并编辑，可以用windows自带的文本编辑器编辑，也可用其他。</p><h2 id="写作语法"><a href="#写作语法" class="headerlink" title="写作语法"></a>写作语法</h2><p><strong>.md</strong>的文件格式说明了它的身份，它是一个Markdown格式的文本，一种对程序员比较友好的文本格式，但必不代表普通人就不懂用了，什么都是可以学习的嘛。</p><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><p>我这里并不会教如何用Markdown，我只会讲如何学习Markdown。</p><p>推荐<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程的Markdown教程</a>，有关命令介绍得很清楚，很适合新手，当然我也是从那里学习的。</p><p>学习完了Markdown，就可以使用其他软件快速地编辑文章，我推荐<strong>typora</strong>，它是一个优秀的Markdown文本编辑器。但是并不推荐新手直接就用这个编辑器，因为它太优秀了，以至于把Markdown的门槛给抹去了，这样其实对个人的成长并不怎么好。工具终究是工具，最好用的还是自己的脑袋，过度依赖工具，会使自己变成工具的“工具人”。</p><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p>Markdown是支持部分html标签的，但不是支持html。至于支持什么，自己查吧。</p><h2 id="图片相关"><a href="#图片相关" class="headerlink" title="图片相关"></a>图片相关</h2><p>图片这种基本老生常谈了，其实就是图床的问题。其实图片可以上传到github的仓库上，但是github的速度众所周知，所以比较推荐其他的图床。图床这种东西网上找一大片，但最重要的是稳定和速度。稳定就不用说了，要是几天这个平台就没了，那就欲哭无泪了，所以尽量选择老牌，而且最好是能看到他的盈利模式，一般免费的容易死的快。速度这个就更不用说了，要是速度还不如github那就呵呵了，所以尽量选择国内的吧，国外的一般在国内速度都不是很好，当然说不定也有例外。</p><p>像我的话，用的是<a href="https://imgchr.com" target="_blank" rel="noopener">路过图床</a>，2011年的，国内的，速度还行，盈利靠广告和企业收费，所以就比较令人放心。但唯一可惜的就是每小时只能传30张，每张不能超过10M。</p><h2 id="上传到博客"><a href="#上传到博客" class="headerlink" title="上传到博客"></a>上传到博客</h2><p>在git bash执行<code>hexo g -d</code>部署到博客即可。</p><h1 id="自定义域名绑定"><a href="#自定义域名绑定" class="headerlink" title="自定义域名绑定"></a>自定义域名绑定</h1><p>因为我并不打算自定义域名（其实是没钱），所以我并不会自定义域名，可能以后有机会在写一下吧，在这之前可以百度学习。</p><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>至于个性化的内容可能要等以后了，这篇文章也四千多字了，以后的个性化内容也不少，可以说是一个坑分成两次部吧，预告一下个性化的内容：404自定义，音乐播放器，主题更换，站长配置，评论系统，百度自动推送，广告添加，特效等等。如果等不及了可以自行解决，也可以拿钱砸我（明示打赏！），叫我更快点，反正我都不介意[手动滑稽]。如果看来我的教程还是不懂的话，可以到<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo的官网</a>查看文档学习。</p><p>本来是想一天就解决了的，没想到事情突然变多，一直拖了三天左右，这也是没办法的事。之所以想要补了这个坑，是因为我想开新坑，至于是什么新坑，拭目以待吧。</p><p>如果有什么错误，欢迎指出。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello world</title>
      <link href="/2020/03/05/hello-world/"/>
      <url>/2020/03/05/hello-world/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="第一篇博客文章"><a href="#第一篇博客文章" class="headerlink" title="第一篇博客文章"></a>第一篇博客文章</h1><!--这些是注释文本，不会显示--><!--在这里放些代码先，免得以后忘了...title:date:tags:categories:keywords:description:top_img: （除非特定需要，可以不寫）index_top_img_height:  #主頁top_img高度 例如 300px/300em/300rem  不能使用百分比comments  是否顯示評論（除非設置false,可以不寫）cover:  縮略圖toc:  是否顯示toc （除非特定文章設置，可以不寫）toc_number: 是否顯示toc數字 （除非特定文章設置，可以不寫）copyright: 是否顯示版權 （除非特定文章設置，可以不寫）mathjax:katex:hide: 文章隐藏top: 文章顶置wordcount: 文章字数统计  enable: true--><p>说实话，其实这个博客早就搭好了，只不过我太懒了，搭完后没有继续完善，所以就还没公布，不过现在感觉整得差不多了，也就公布一下我的博客。</p><p>我会在这里发一些各种各样的教程，比如自己搞的一些小程序（不是微信的啊），或者ps教程，网络工程，单片机什么的。最近的项目的话，就是公布我搭这个博客的过程，还有教程吧，当然我很懒的（不信的话可以看看上方的发表时间和更新时间），所以不要期望太多，更何况现在也有很多教程了，所以多我一个不多，少我一个不少。这个网站我是不打算被搜索引擎收录的，所以我的博客是不会被搜索到的，除非有人提交上去————所以啊，赶紧收藏啊！(>▽<)！</p><p>这个网站是用 github pages + hexo 做的，因此我的博客是静态网页。当然，这个网页的主题也不是我制作的，我也没这个实力，我只是改了配色拿来用的，教程会写到的，网页最下面有原作者的网站你们可以看一下。所以以后我可能会学习制作主题，做一个属于自己的主题，毕竟这个主题也不是很适合我。</p><p>总的来说，这个博客就是给我自嗨的，用来写写总结，发表一些看法，基本不用考虑别人，当然如果人数很多的话，我还是会考虑一下的。当然如果有人打赏的话，嘿嘿嘿，这个好说。︿(￣︶￣)︿</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
